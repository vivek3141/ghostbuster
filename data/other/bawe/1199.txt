Open Source Software (OSS) is a model for software development and distribution in which the source code of the software itself is freely available to everyone. This means there are no license fees to be paid for using and everyone can inspect the actual function of the software, thereby augmenting trust and security of the software itself. The software designs are driven by the wishes of their creators and the end goal can be whatever they wish. Many people recognize a qualitative benefit to the software development process when a program's source code can be used, modified and redistributed by developers. However, Open source doesn't just mean access to the source code. The distribution terms of open-source software must comply with the following criteria: Free redistribution, source code available, derived works, integrity of the author's source code, no discrimination against persons or groups, no discrimination against fields of endeavor, distribution of license, license must neither be specific to a product nor restrict other software but technology-neutral. I think these criteria also fit to ODS and OSH. Open source software is not always free in price sense, but is free in freedom sense.
OSS usually supports popular ODS for data storage and exchange. An Open Data Standard (ODS) is a model for data access, exchange and storage for which all the documentation regarding its features and specifications is freely available to everyone. This implies that, in principle, the same data may be accessed, processed and stored by software produced by different companies. It ensures interoperability between various solutions that need to operate on the same data. Adobe's PDF, the HTML and XML web languages, and the JPEG graphical formats are among the best known ODS while Microsoft's .doc format is an example of a "closed" standard. Usually, ODS contributes in several aspects such as, increasing privacy and transparency of the user's data, reducing exposure to situations in which commercial software vendors exploit proprietary data formats to consolidate and augment their market share, guaranteeing the permanence of public data, by avoiding dependence on the goodwill of the suppliers or on the monopoly conditions imposed by them. ODS are often used in conjunction with OSS.
Open source is a powerful force in software development. However, open source is more and more popular among hardware world these days. There exits a technical tendency that open source software and hardware design should stand together as they have the same roots. If a company sells any device which interfaces to a computer without publishing the interface specs, they then have a monopoly on interface software (or can sell the monopoly to a software company). WinModems and WinPrinters - which also cannot be supported by Linux - are a related problem. This aspect of open-ness in hardware is so closely linked with work on free software. Open source hardware (OSH) refers to hardware for which all the design information is made available to the general public. Such as the design specification, HDL files, simulation test benches, synthesis results, utilization instructions and interfaces to other systems, etc. To fully qualify as 'open hardware', it always would have to satisfy such the requirements: The interface to the hardware must be explicitly made public, so the hardware can be used freely. The design of the hardware must be made public, so that others can implement it and learn from it. The tools used to create the design should be free, so that others can develop and improve the design. Users of the end product can not only know how it works, but are encouraged to create improvements or modify it for their own purposes.
When we compare the three above concepts, main features and all their requirements, it is not difficult to found that they have something in common, which is, the freedom to use and improve the current product and the convenience for the public.
In order to avoid confusion and to make it more clearly, we can come to their opposite side---"closed", that is, commercial design and setting. So what would commercial soft/hardware designs look like by comparison? Their designs are owned by the company which creates them and driven by marketing departments. The ownership is protected by three sets of laws: copyright, trade secret, and patent. It is often even impossible to see a design without signing a non-disclosure agreement. Designers cannot legally build on older designs unless their company owns the right to use these designs. The users of the final product neither have rights to know how they work nor can they adapt or fix the problem or base a new design on it. After all of these, the result is always that software is ridiculously expensive, hardware is extremely obscure; all except the largest companies or universities are barred from using them by cost.
So the trend for open-ness is to become more and more limited, restricting the freedom of hardware designers to create or implement their own designs, and even of software programmers to write the programs they wish. Try to ask: Is your design published that others can learn from it, improve on it, or even second-source the same device? Much digital hardware has never been open in this sense, creating a whole industry of reverse-engineering and patent claims and counter claims. But there have been exceptions; most notably, the SPARC architecture. In the days of the first PALs, internal structure and programming details were widely published in order to expand the market. Why we can't make it go on? Now no manufacturer publishes the bit-stream format for programming FPGAs (the one exception, the Xilinx XC6200, now seems to have been dropped). As a result, the only design software available for these devices has been commercial software, and it has not been possible to create free software to make up for some of the deficiencies in these tools.
The direct effect is to create a closed caste of designers producing unintelligible products for a passive population of consumers. As a student in the electronic engineering field, I will take the most familiar hardware into consideration. Many of my classmates are excellent at carrying out the small designs possible with some devices, which designs completely untypical of the majority of contemporary practice. They are also familiar with the implementation of small designs for FPGAs or ICs. They seems far less likely to be familiar with the inner workings of any of the more recent devices they may actually use in their daily life-- these have largely become `black boxes'. The result is a trend to exaggerate a split between teaching and the real life use of technology, and a consequent steady decrease in interest in electronics among students.
Outside the area of education, the fact that it is legally impossible to base new designs on those created by others creates huge amounts of wasted and unnecessary effort. It has also become increasingly impractical as the time-to-market for new designs shortens. Otherwise, once designs are no longer 'closed' the rate of development and improvement can be expected to increase, as some of the energy currently put into developing similar designs from scratch in many companies at once is transferred to developing completely new designs and improving commonly available ones.
Although many designs have always been patented, there is also a long traditional of engineers borrowing and improving on designs that just 'float around'. Many of these can be found in various places on the Internet, but few of them have been general public licensed or otherwise protected as `free' designs. The attempt to create IP design libraries which are available only for sale will tend to destroy this tradition. We ever set up the first established free site Free-IP for these designs in the past, now, the group with the largest number of participants is OpenCores. OpenCores is pulling in designers from round the world, from students to highly experienced professionals. The nominal goal of OpenCores is to produce a full library of SOC components, and to have these manufactured. Though not so prevailing at present, it can be regarded as a progress in the long way of openness.
We are eager to the true and beneficial openness. Obviously we respect patent and copyright and we value other individual's labor and achievement. But the openness we talk about here is a sharing of knowledge and technology based on the equality and respect. Open not only means intercommunication and file formats follow standards that are open for all to implement without royalty fees but also means no discrimination and backbiting. It means no user is required to use a particular product simply because other users do. All companies can competing products inter-operate with each other through open standards. In software it also means code mobility - the ability to run the same software on a range of platforms. The intention is to make useful source as widely available as possible, which is also the essence of openness. There is every incentive to build on older designs, to collaborate with as wide a spread of people as possible, and to make the designs widely known. NGOs in developing countries are not locked out, but encouraged to reuse designs. In this way so open-source can be proposed as a bridge for the technological, educational and cultural gaps between developing and developed countries. It allows collaboration and cooperation with a wide spectrum of experts in high-tech fields all over the world. Open source might help focus the spotlight on high-tech talents and qualifications in developing countries that are hidden due to market constraints. If this can be fully realized, knowledge of software and hardware design would become more diffused through society and the whole world, destroying absolute barriers between `creater' and `consumer'. Designs that people wanted could be produced, rather than designs planned for people to buy.
In technical use, a standard is a concrete example of an item or a specification against
which all others may be measured. They may be produced by organizations, some for internal usage only, while others for use by a groups of people, groups of companies, or a subsection of an industry. Standards can be followed for convenience and eliminating the mutually incompatibility, or be used because of (more or less) legally binding contracts and documents. Government agencies often have to follow standards issued by official standardization organizations. Following such standards can also be a prerequisite for doing business in certain markets, with certain companies, or within certain consortia. Standardization, in the context related to technologies and industries, is the process of establishing a technical standard among competing entities in a market, where this will bring benefits without hurting
competition.
Nowadays, effectively handling IPR(Intellectual Property Right) in the technical standardization process has become a major challenge and difficulty which has caused heated debates around the world, especially in the information and technology field, for example digital audio-video standards, wireless LAN standards and DVD etc. As an overseas student from China, I know that there are many cases related standards and IPR recently, such as the famous affairs DVD, CISCO and HUAWEI. Because of the huge influence on the economic, we had to pay more attention to the issues about IPR and standardization, as well as China government.
The key issue for IPR in standardization is patent. Larger companies hold 'patent pools', series of patents combined together, which they use as bargaining counters with one another, and which block new entrants from the market. The contradiction between privatization of patent and publicity of standardization is difficult to conciliate, while there combination is easily tend to result in monopoly. Monopoly is not what most people expected. The basic motivation for technical standard setting is to boost optimal public interest and a reasonable patent system should balance the rights and interests between the owners and users. Open sources may act a wise role in this situation.
For instance, market competition is mainly based on patents and intellectual property that maintain all rights for the originator firm. So goes without saying, companies may oppose aspects of open source that generate alternatives for commercially protected products. However, there is always an optimal position between contradictions. The suggested solution is that companies might take advantage of open source as a way of bridging the gap for time and cost absorbed in research and development. The researchers might find they don't have to reinvent already existing wheels. They will admit the advantages that openness brings in: it encourages innovation and fosters bold new products to market which build on proven technology at a markedly lower cost. Then they may find adoption of an open-source design with large base of customers as a win-win deal. Companies can refine the open-source design with affordable prices and make use of bug fixing provided from the community, which has no bad effect on their patents. The end result is cutting-edge reliable products with affordable prices.
Another key issue for open source is that it has to build confidence and credibility.
Good confidence and credibility among huge of users is the perfect "patent" for open sources. The suggested solution is that designers produce high quality and completely documented designs. It will be only a matter of time to convince the user community of the credibility of open designs. For instance, the Linux operating system has become reliable and competitive due to efforts exerted to enhance quality and performance from the developing community. For me, it is also more preferable operating system compared with Windows.
What measures we should take to reach the better co-existing of openness and patents? First is for government authorities to create a legal circumstance to make a balance between trade and competitiveness; second is for SDO to regulate the disclosure of IPR information and ensure the openness, fairness and balance during the process of information obtaining and standard setting and protect the rights both for users and holders; and the third is for IP owners and companies to understand and use the "RAND"(reasonable and no discrimination) rules to implement the process.
In the long run, as better solutions emerge through time, we may look back on this point as the time when control over our lives as passive consumers began to be replaced by creation of our lives as active participants. We can efficiently and effectively get what we need on the shoulders of already-existed. We also respect and protect their fruits and are willing to share our harvests with others anytime. In a society that seems determined to force unwanted pay-per-view, ridiculous encryption systems, and privatized knowledge on us in order to maintain profits, there is a chance to build an alternative technology which is truly convivial. We are just trying to find the best position to lean on.