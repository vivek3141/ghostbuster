This experiment was developed to approach understanding population dynamic systems by practicing stochastic population model simulation via MatLab. Specifically, the mean of the population sizes over time was concentrated on by introducing metapopulation dynamics i.e. dispersion, into the given simulation model with only birth and death processes. According to the graphic investigations of control run and experimental runs with variable dispersal rates, this simulation experiment predicted that the mean of the population sizes would mainly steady in relation to long run time. However, dispersal process was estimated to be responsible for increasing the mean of population sizes, but also acts as a population density-limiting factor. Additionally, biases of the model assumptions were discussed at metapopulation level.
For better understanding and control of ecological system, demography plays an essential role in ecology study. Spatially and temporally, population is defined as a closed group of individuals of same species. In a very true ecological sense, population dynamics always occurs in every organism due to species-specific behaviors and environmental fluctuations. Population size is regarded as changing in four direct ways where birth and immigration increase the population size while death and emigration vice verse. Instead of taking place within the same population, referred as migration, dispersion takes place between populations and enhanced a network within two or more populations. The collection of these interconnected single populations depends on tempo-spatial habitat distribution and dispersion, is called metapopulation.
Since the development of mathematical models and computational applications in modern ecological studies, stochastic simulation models are increasingly used to approximate the probability of certain outcomes by running multiple trial runs. (Bernstein, 2003) Monte Carlo simulation is a remarkable stochastic population simulation model for problem solving, which requires computer simulations. It enables ecologists to test various strategies and analyse the simulation results in the long run relying on the known theories. Monte Carlo simulation can also be described as a collection of Poisson processes that assumes independence between different processes. By introducing MatLab, computer software designed for enormous statistical processes, this Monte Carlo simulation experiment was carried out and aimed on the means of population size in relation to long run time. In addition, MatLab contributes the simulation with visual aids to see how would the outcome of interest work out.
Model results were generated at the level of metapopulation, while the details in dispersal probabilities, such as dispersal probability in relation to dispersal distance and the probability of each individual to disperse, were ignored. Two MatLab files were provided: one script and one function program. Most parameters involved in this simulation were initialised, however, appropriate experimental variables of dispersal rate were demanded as an essential complication to metapopulation. Thus, further modification of the program files was required in order to fulfill the simulation model.
In function file 'fsim05', function D was annotated as a multidimensional array that produced metapopulation simulations. 'Fsim05' represented the relationship between the stochastic population processes. 'Dosims05' was a script file that commanded fsim05 to generate the simulations, but also was responsible for the layout of diagrams. These two files were provided only with birth and death processes. Based on metapopulation dynamics theories, however, dispersal rate has to be taken into account. Therefore, 'dispersal rate' was added into the MatLab files as one of the processes in Monte Carlo simulation.
Before entering dispersal event into the files, a control run without dispersion was produced by running 'dosims05' via MatLab software. There popped up four graphs, which only the first graph of each series graphs was interested because of the targeting outcome. Twelve iterations sub-plotted in the diagram addressed by repeating function D. (Figure 1) For a better visualization, there designed another graph for summarising 12 repetitions into 'dosims05'. (Appendix III) It illustrated the mean of twelve means of population size over time without dispersion. (Figure 2)
The model was initailised with population growth rate i.e. birth rate and death rate, initial population size (IC), number of populations (Npops), number of repetitions (Nreps) and maximum time period (MaxTime). In 'fsim05', 'DspR = pops .* Dispersal Rates' was coded following same equations for birth and death rate that indicated they were all calculated at population level. Dispersal rate was also added as part of total rate of events by inserting code 'sum(DspR)'. (Appendix II)
Since once a dispersal event takes place in one subpopulation, there is always another subpopulation has the opposite influence in population size, dispersal rate was subtitled as leave rate and arrive rate. By ignoring the speed of dispersion, it was considered that leave rate and arrive rate happened in one subpopulation were always at the same time point. Therefore, leave rate and arrive rate were programmed into 'fsim05' within one case, noted as case 3. (Appendix II)
The random numbers were produced to determine time to next event, which event to occur and which population to occur. Since leave event and arrive event were discussed separately in case 3, totally 4 random numbers were required. To change the code of random numbers in 'fsim05' 'randnums = rand ( 1, 3 )', modify '3', the second number in bracket into '4', while the first number meant the value of random numbers were within zero to one. (Appendix II)
The first random number represented time interval to next whatever event would happen. The second random number was responsible for choosing one process to take place from birth, death and dispersion. It also determined which case it would be switched on. The third number decided which population that the selected event would occur. If dispersal event was picked, the third and the fourth random numbers were used to find two random populations to which leaving and arriving would occur, respectively. In case 3, when leaving event occurs, the population size decreases by one accordingly, meanwhile arriving is vice verse. To enable the computer recognize the change in population size, for example, 'pops (index ( 1 ) ) = pops ( index ( 1 ) ) - 1' was coded for losing one individual in that population. This can also be learned from the codes standed for the occurrences of birth and death. (Appendix II)
The accomplished MatLab files were ready to illustrate experimental variables as the codes in 'dosims05' requested. As dispersal rate ranged between 0 and 1, in this simulation experiment, 0.2, 0.5, 0.8 were chosen to test the situations when more or less than half population size dispersed, as well as when exact half population size dispersed. Dispersal variables were added into 'dosims05' in the same form as birth rate and death rate set as 0.5. (Appendix I) By running 'dosims05', each certain dispersal rate produced a series of graphs. Same as done for summarizing the 12 repetitions in control run, the mean of 12 means of population sizes was generated for each dispersal rate variable.
In this simulation model, all processes were formed as density independent and took place independently. Birth rate and death rate were determined as 0.5 and enhanced a stagnant population growth rate. It is notable that in reality most populations are combined with density dependent and density independent processes. Relies on dispersal processes, they can swap spatially and temporally in metapopulation. Dispersal process is a Poisson process, scaled either by time between events or number of events in a time interval. It means variance of dispersion equals to its mean. The occurrence of dispersal event was identified with two aspects: leave rate and arrive rate. This extra term gained amount of stochasticity experienced for such stochastic simulation model. (Keeling, 2000) The same concept was used in deterministic formulation of birth rate and death rate rather than population growth rate. It is notable here, leaving and arriving processes were chosen from event rate of dispersion, and the subdivision only explained the network between subpopulations with no affect on population size.
According to the simulation results, under the deterministic conditions, the mean of population sizes was shown mainly constant over time no matter if dispersion occurs or not. Even so, variance of the means of population sizes suggested 'Random walk' property of population size, from an alternative view of stochastic simulation. The randomcity event rates might result in a conspicuous mean of population sizes in long run, but with a comparatively low frequency.
The control run was only involved birth and death processes, which was not metapopulation. The trendline was found declining within limited extent. It predicted that the population with no dispersion is likely shrinking in population size in long run. The ones with 0.5 and 0.8 dispersal rate maintained slightly above the initial population size, however this could not be recognized strikingly when dispersal rate was 0.2. Thus, dispersion is assumed can increase the mean of population size in relatively small amount. The majority of the lines in the graphs that indicated the means of population sizes were getting smoother, as well as the mean of the means, while dispersal rate getting higher. Meanwhile, the means of population sizes were found getting closer to the mean of the means. In other words, the range of fluctuate population sizes gets narrower when dispersal rate rises. In sense of population dynamics, the population density would never remain equilibrium, but rather to be controlled within a range. The model results confirmed that dispersion is very likely to be one of the processes influences this range, termed density-limiting factor.
The confidence in the model would be improved substantially if field studies were completed that produced unbiased estimates. (Martinez, 2003) In modeling studies, it is crucial to bear bias in mind all the time. In this simulation, random number 3 might equal to random number 4, which means same population was chosen for both leaving and arriving events. This would lead to no dispersion where the individuals dispersed and returned to the same population at that time point. Consequently, the result stated with dispersion would contain data collected without dispersion. This can be considered as a bias of this stochastic simulation although the probability is very low and for long run stimulation effect will be trace. Furthermore, distinguishing metapopulation from single population implies another bias of this simulation. When dispersions happen between two populations with half each population size, then two subpopulations are significantly mixed and become one single population. The number of populations in metapopulation should be reduced by one accordingly, where in the MatLab files that only will be considered when population size turns to zero. In nature, the case is found not rare within the populations closely localized, can be referred to neighbourhood theory.
It is reported that dispersal process is involved in genetically controlled, phenotypic dimorphism, gender differences and social ordering. (Keeling, 2000) It again supports that the network within metapopulation benefits long-term population size stability. After all, metapopulation dynamics can also reflect human population dynamics. Thus, successful stochastic population models can approach long-term prediction and awareness via demography stochasticity and environmental stochasticity in order to avoid or reduce ecological damage.