Cryptography is the art of sending secret messages. For thousands of years it has been used by governments, terrorists and lovers to keep their correspondence from being read; during that time it has changed the course of wars and condemned people to death. However it is only with the birth of the internet that cryptography has been used by more than a select few. Cryptography is fundamental to how we use the internet and to modern e-commerce, for example anyone who has ever bought or sold something online has had their credit card details encrypted.
Traditionally and for thousands of years people have used what is known as private-key cryptography. As is traditional in texts on cryptography I shall refer to the receiver and sender of secret messages as Alice and Bob (rather than just A and B). Suppose Bob wants to send a secret message to Alice using a private-key cryptosystem. In order to do this Alice and Bob must previously agree on an encryption/decryption method and on a key. This would typically be: a special number or phrase, a table of what to encode different letters and words as, or even the specific settings of a decryption/encryption machine such as the famous German Enigma machine used in WWII. Once these are agreed upon (secretly of course) Bob applies the encryption method using the key to the plaintext message he want to send Alice in order to get a ciphertext which he communicates to Alice. On receiving the ciphertext Alice applies the decryption method using the key to reveal the plaintext message (see fig. 1). Ideally an eavesdropper (traditionally known as Eve) who intercepted the ciphertext would find it extremely difficult (preferably impossible) to derive the original plaintext message since she will not have the required key. Ideally there will a very large number of possible keys to prevent Eve just guessing the correct one.
A simple example of a private key cryptosystem is what is known as a monoaphabetic substitution cipher; in this system each letter of the alphabet is replaced by a different letter and the resulting text forms the ciphertext. The key in this case is a table mapping each letter to its replacement. Decryption is obviously straightforward if you have this key but much harder if you don't; although it is in fact possible by analyzing the frequency of the different letters as first described by the Arab scientist al-Kindi in the ninth century.
There is however a major problem inherent in private-key Cryptography: that of agreeing on the key itself. Alice and Bob must both have knowledge of the key before the secret message can be sent. The key needs to be agreed upon secretly and this causes both security and logistical issues. At first this wasn't much of a problem: a general such as Julius Caesar could agree a key with people in Rome before heading off on campaign. But with the communications revolution of the 19 th and 20 th centuries (telegraph, radio, telephone etc.) governments and businesses needing to communicate in secret still had to courier the keys by hand, leading to huge logistical costs and potential for treachery by the couriers.
The problem of key distribution grew even more serious with the birth of modern computing and the internet. How could two people (who might be the other side of the world from each other), meeting on the internet and wishing to communicate in secret, ever hope to do so? To send a message secretly they must agree on a key, but there is no way to send this key to begin with without risking it being intercepted. Before this problem was solved modern e-commerce was impossible.
The beginnings of a solution to this problem came in 1975, from three American cryptographers: Ralf Merckle, Whitfield Diffie, and Martin Hellmann. They developed an idea known as public-key cryptography.
In this system there are two keys, a public-key and a private-key. If Bob wants to send a message to Alice, then this time Alice takes the initiative: she picks a private-key and keeps it secret even from Bob, from this she derives a second public-key in some way from the private-key and makes this public-key freely available for anyone to see and use to send her secret messages. Bob then uses Alice's public-key to encrypt his plaintext message which he transmits to Alice. However in public-key cryptography the encryption/decryption method is designed such that while the public-key can be used for encrypting messages, only Alice's secret private-key can be used to decrypt the ciphertext (see fig. 2).
Our eavesdropper Eve has access to both the Public Key and the ciphertext but still cannot derive the plaintext from these.
The huge advantage of this system is that there are no logistical or security issues in agreeing on a Key since the public-key can be made available to everyone; it no longer has to be a secret so can be transmitted safely on the same medium as the ciphertext will be. Such systems allow secure and practical communication over the internet.
Merckle, Diffie, and Hellmann had come up with the general concept of this system but hadn't come up with a practical example. A key requirement of this system is that the public-key can be derived from the private-key easily but not vice-versa (otherwise Eve could easily convert the freely available public-key into the private-key and hence decrypt the plaintext). Mathematically what was needed was some kind on "one way function" which is "easy" to compute but with a "hard" to compute inverse. Here "easy" means computable in a reasonable amount of time (such as a few seconds) and "hard" means only computable in an unreasonable amount of time (such as a million years).
The search for a practical implementation of a public-key cryptosystem took two years. In 1977 the computer scientists Ron Rivest and Adi Shamir along with the mathematician Len Adlemen published a joint paper [1] describing what came to be known as RSA (after their initials). The basic idea is this: Alice chooses two large prime numbers p and q, she multiplies them together to get N. The "one way function" is this multiplication, multiplying p and q to get N is quick to do, but p and q can only be deduced from N by prime factorization; however this is extremely time consuming for large N (as we shall see later). The actual detail of the method is more complex and I will describe how it works in the next section before proving why it works mathematically.
I have described how RSA is supposed to work and shown that it does work in a simple example. But why does it work? I will state the fact that RSA works as described above as a theorem which I will then work prove.
Consider Bob's message to Alice from the point of view of an eavesdropper (Eve). The information she has available is: the ciphertext C, and the public-key: {N,e}. Crucially Eve does not know Alice's secret private-key: {N,d}. The quickest (publicly known) way to determine M from {C,N,e} is to factor N into its prime factors p and q. It is then easy to compute (p-1)(q-1); and d can then be derived by solving the expression  (using a variation of the Euclidian Algorithm). Thus the Private Key {N,d} is known. However prime factorization of large numbers has proved to be extraordinarily time consuming. Indeed there is no known algorithm s.t. N can be factored in polynomial time, i.e. such that the time taken to factor N:  for any constants c,k.
Based on the fastest algorithm known in 1977 and the fastest computers of the time Rivest, Shamir and Adleman estimated that an integer with 100 digits could be factored in 74 years and one with 200 digits in 3.8 billion years [1]. Despite which, due to the huge increase in computing speed and sheer mathematical ingenuity, on the 3 rd of December 2003 team at the German Federal Agency for Information Technology Security announced the factorization of the 174-digit number [3]:
188198812920607963838697239461650439807163563379417382700763356422988859715234665485319060606504743045317388011303396716199692321205734031879550 6569962213 0516875930 7650257059
known as RSA-576 receiving a cash prize of $10,000 from RSA Security the company set up by Rivest, Shamir and Adleman to market their patented cryptogram. It turns out that this number is in fact
398075086424064937397125500550386491199064362342526708406385189575946388957261768583317 x 4727721461074353025362230719730482246329146953020971164 59852171130520711256363590397527
Clearly therefore, huge numbers are required for secure use of RSA. For complete security it is now recommended that N should be about 600 digits long (2048 bits).
The theoretical computer scientist Peter Shor has shown that a working quantum computer (a computer making use of quantum phenomena at the microscopic level) implementing Shor's Algorithm could factor prime numbers fast enough that  for some constant c, rendering RSA inherently insecure. However a practical quantum computer has yet to be built and it is unlikely to happen in the near future. Such speculations on the future of quantum computing and the algorithms it may be possible to run on them are beyond the scope of this essay however.
So for the near future at least, as long as you choose a large enough N, Eve won't be able to factorize N and read Bob's message in that way. Could she crack it without doing so? There is no (publicly known) method for cracking RSA faster than factoring N; however it has not been proved that no such method exists. An algorithm for factoring N in polynomial time or of cracking RSA in some other way would make RSA cryptography fundamentally insecure; but in the last 28 years no-one has been successful at this and the prime factorisation problem has been worked on by many mathematicians for hundreds of years.
RSA is very secure (as long as you pick a large enough N).
Also: Don't worry if the mathematics you are doing seems completely useless! Hundreds of years ago when mathematicians like Euler and Fermat were proving the theorems that make RSA possible, it would have been absolutely inconceivable that their work in this area of number theory, one of the purest topics in pure mathematics, could ever have any kind of practical application. Indeed as recently as 1940 the number theorist G. H. Hardy (1877-1947) wrote "...both Gauss and lesser mathematicians may be justified in rejoicing that there is one science [number theory] at any rate, and that their own, whose very remoteness from ordinary human activities should keep it gentle and clean." [8]. Hardy may not have liked Rivest, Shamir and Adleman's sullying of his subject had he lived to see it. But I feel it is encouraging to think, while struggling with some exotic problem in some obscure corner of mathematics with no apparent relevance to "ordinary human activities"; that in hundreds of years, that someone, working in some new science that is yet to be invented, may find some kind of (currently inconceivable) application for it.