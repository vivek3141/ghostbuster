I totally agree with the statement because not only I find  that memorizing  facts is most of the time totally useless, but  I strongly believe that there is no use in learning if students cannot apply the acquired information in different ways.
 
 Facts such as dates, names,  places, and definitions are recorded in books, encyclopedias, newspapers, and electronic documents.  There is no point in spending time memorizing them, when we can have access to such data if we know how and where to find it.  Rather than having students memorize the meaning of a word, they should be taught how to look it up in a dictionary.  Instead of asking students to memorize facts in a particulary history passage, they should be presented with such information just to help them understand the background in which a historical moment took place.
 
 When students are given the opportunity to transfer the ideas and concepts that are being taught into different situations, particularly when those situations are closely related to the student's reality, the learning process "sets in".  Show them the relationship between speed, distance, and time on the blackboard, and most of them will not be able to understand it.  But ask them what happens if they are late for their first class, and most of them will answer without any hesitation that they would drive faster.
 
 In my experience as a Computer Science teacher who teaches programming in a local high school, I'd rather have my students try to figure out how to solve a particular problem by understanding what needs to be done, than letting them worry about the implementation details.  This approach is not easy for them at the beginning: they want to know how all instructions in a particular language are written, and they often feel frustrated when instead of giving them the answer right away, I ask them to check the developer's documentation.
 
 Once they understand that the language details are not important, because they can always go and check how a particular instruction is written or can be used, they can focus on what is truly important in computer programming: developing the skills that are needed to solve any given problem.  
 
 The most rewarding comment I have had in these 12 years as a Computer Science teacher came from a student that is now in College studying a major in Engineering.  I found him this morning here, at the IBT Testing Center, and he said: "Ms. Cannon, thank you for teaching me problem-solving.  You can't imagine how I still use the strategies that you taught me in your class, even in subjects that do not have anything to do with engineering."